id: CERES
author: everyplanet, astrash, dfsek
version: ALPHA-0.1

structures:
  locatable:
    minecraft:desert_pyramid: DESERT
    minecraft:stronghold: STRONGHOLD
    minecraft:pillager_outpost: OUTPOST
    minecraft:swamp_hut: SWAMP
    minecraft:monument: MONUMENT
    minecraft:igloo: IGLOO
    minecraft:jungle_pyramid: JUNGLE
    minecraft:ruined_portal: RUINED_PORTAL
    minecraft:village: VILLAGE
    minecraft:mineshaft: MINESHAFT

blend:
  terrain:
    step: 3
    elevation: 4

beta:
  carving: true

vanilla:
  mobs: true

variables:
  carvingThreshold: 0.5 # Higher = less carving
  carvingMinHeight: -5
  carvingMaxHeight: 76
  carvingClampTaper: 3
  carvingMax: 1 # Caps the amount of base carving

  cheeseStrength: 1
  cheeseHorizontalFrequency: 1.5
  cheeseVerticalFrequency:   3

  pillarStrength: 0.5


noise:
  noise2:
    type: FBm
    dimensions: 2
    octaves: 4
    function:
      type: OpenSimplex2
      frequency: 0.0075
  noise3:
    type: FBm
    dimensions: 3
    octaves: 4
    function:
      type: OpenSimplex2
      frequency: 0.0075
  rand:
    dimensions: 3
    type: WhiteNoise
  desert:
    type: DomainWarp
    dimensions: 2
    amplitude: 25
    function:
      type: Cellular
      frequency: 0.015
      return: Distance
    warp:
      frquency: 0.015
      type: OpenSimplex2
  mesa:
    type: "DOMAINWARP"
    amplitude: 15
    warp:
      type: "OPENSIMPLEX2S"
      frequency: 0.02
    function:
      type: "CELLULAR"
      return: "Distance"
      frequency: 0.015
  mesaMask: # Essentially a white noise mask for the mesa function.
    type: LINEAR
    min: -4 # [0.2 ... 1]
    max: 1
    function:
      type: "DOMAINWARP"
      amplitude: 15
      warp:
        type: "OPENSIMPLEX2S"
        frequency: 0.02
      function:
        type: "CELLULAR"
        return: "CellValue"
        frequency: 0.015
  noiseC:
    dimensions: 2
    type: Cellular
    frequency: 0.25
    return: NoiseLookup
    lookup:
      type: FBm
      octaves: 4
      function:
        type: OpenSimplex2
        frequency: 0.02
  
  bubble: # Bubbly noise
    dimensions: 2
    type: LINEAR
    min: -0.75
    max: -1
    function:
      type: CLAMP
      min: -1
      max: -0.6
      function:
        type: Cellular
        frequency: 0.075
        return: Distance2Add

  # Noise that produces dots, used in producing speleothems for noise caves
  cavePillars:
    type: Linear
    min: 0.98
    max: 1
    function:
      type: Clamp
      min: 0.98
      max: 1
      function:
        type: Expression
        equation: "-cell(x, z)"
        functions:
          cell:
            type: Cellular
            return: Distance
            frequency: 0.05

  # Basic 2D simplex noise
  simplex2:
    dimensions: 2
    type: Linear
    min: -0.9
    max: 0.9
    function:
      type: FBM
      octaves: 4
      function:
        type: OpenSimplex2
        frequency: 0.0075
  
  # Basic 3D simplex noise
  simplex3:
    dimensions: 3
    type: FBM
    octaves: 2
    function:
      type: OpenSimplex2
      frequency: 0.0075

functions:

  floorMod:
    arguments: [a, b]
    function: "a - floor(a / b) * b"

  # Equations used to determine the profile of terraces

  linearStepProfile:
    arguments: [a]
    function: "|a - 0.5| - 0.5"

  parabolicStepProfile:
    arguments: [a]
    function: "(a - 0.5)^2 - 0.25"

  curvyLinearStepProfile:
    arguments: [a]
    function: |
      if(0.25 < a && a < 0.75,
        2*(a-0.5)^2-0.375,
        |a - 0.5| - 0.5
      )
  lippedBaseStepProfile:
    arguments: [a]
    function: |
      min(
        -0.5 * a,
        3 * (a - 0.5)^2 - 0.5
      )
  stepClamp:
    arguments: [a]
    function: "if(0 <= a && a < 1, a, 0)"

  # Returns a stepped version of the input,
  # used primarily for creating terraced terrain.
  step:
    arguments: 
      - i  # Input
      - sc # Scale
      - o  # Offset
      - g  # Gap
    function: "sc * linearStepProfile(stepClamp(floorMod(i / sc - o, 1 + g))) + i"

  # Same as the above but using a parabolic profile
  stepParabolic:
    arguments: 
      - i  # Input
      - sc # Scale
      - o  # Offset
      - g  # Gap
    function: "sc * parabolicStepProfile(stepClamp(floorMod(i / sc - o, 1 + g))) + i"

  stepLipped:
    arguments: 
      - i  # Input
      - sc # Scale
      - o  # Offset
      - g  # Gap
    function: "sc * lippedBaseStepProfile(stepClamp(floorMod(i / sc - o, 1 + g))) + i"


  # Same as the above but using a linear profile smoothed with a parabola
  stepFancy:
    arguments: 
      - i  # Input
      - sc # Scale
      - o  # Offset
      - g  # Gap
    function: "sc * curvyLinearStepProfile(stepClamp(floorMod(i / sc - o, 1 + g))) + i"

  # Paralithic sigmoid uses wrong formula :poob:
  pack_sigmoid:
    arguments: [a]
    function: "1/(1+euler^(-a))"

  partialStep:  
    arguments:
      - input  # The number to be stepped
      - height # Height of each step
      - ratio  # Ratio between stepped segments and non-stepped segments
    function: |
      min (
        input,
        round (input/height - ratio) * height
      )
  # Smooth clamp Returns a value between 0 - 1
  # 2 mirrored sigmoid functions translated
  # based off upper / lower bound
  sigmoidClamp:
    arguments:
      - value # Input value
      - lowerBound
      - upperBound
      - smooth # How smooth transitions are from 0 to 1
    function: |
      min(
        1/((euler^(-(( value - lowerBound)/(((upperBound - lowerBound)*smooth)/12))))+1), // The 12 is an arbitrary constant
        1/((euler^(-((-value + upperBound)/(((upperBound - lowerBound)*smooth)/12))))+1)  // that tweaks the maximum 'smoothness'
      )
  # Return 1 if input is between range
  clamp:
    arguments:
      - x
      - lowerBound
      - upperBound
    function: |
      if(lowerBound > x || x > upperBound,0,1)


variables:
  base: 63
biomes:
  type: PIPELINE
  biome: OASIS
  resolution: 4
  blend:
    amplitude: 1.75
    noise:
      type: OpenSimplex2
      frequency: 0.12
  image:
    name: map.jpg
    align: NONE
  pipeline:
    initial-size: 4
    source:
      type: NOISE
      biomes:
        OCEAN: 1
        PLAINS: 3
      noise:
        type: FBm
        function:
          type: OpenSimplex2
          frequency: 0.008
    stages:
      - expand:
          type: FRACTAL
          noise:
            type: WhiteNoise
            salt: 11
      - mutate:  #Mushroom beaches.
          type: BORDER
          from: OCEAN
          replace: MOUNTAINS_STONE
          to:
            - MOUNTAINS_STONE_WRAP: 1
          noise:
            type: Constant
      - mutate: # Ocean climate distribution
          type: REPLACE
          from: "BIOME:OCEAN"
          to:
            - "COLD_OCEAN_DEEP": 6
            - "OCEAN_DEEP": 8
            - "WARM_OCEAN_DEEP": 12
          noise: &climate # This noise will be used elsewhere for climate.
            type: OpenSimplex2 # Use Simplex, so hot cannot be directly next to cold.
            salt: 2
            frequency: 0.025
      - mutate: # Land climate distribution
          type: REPLACE
          from: "BIOME:PLAINS"
          to:
            - MOUNTAINS_STONE: 4 #mountain cold biomes
            - TUNDRA: 4 # Super cold biomes
            - TAIGA: 2 # Taiga buffer zone
            - PLAINS: 12 # Temperate biomes
            - JUNGLE: 13 # Warm biomes
          noise: *climate # Use climate noise
      - mutate:
          type: REPLACE
          from: "BIOME:WARM_OCEAN_DEEP"
          to:
            - "WARM_OCEAN_DEEP": 1
            - "LUKEWARM_OCEAN_DEEP": 8
          noise:
            type: WhiteNoise
            salt: 21
      - mutate: # Randomize Cold/Frozen oceans.
          type: REPLACE
          from: "BIOME:COLD_OCEAN_DEEP"
          to:
            - "COLD_OCEAN_DEEP": 4
            - "FROZEN_OCEAN_DEEP": 1
          noise:
            type: WhiteNoise
            salt: 21
      - mutate: # Humidity distribution of warm biomes
          type: REPLACE
          from: "BIOME:JUNGLE"
          to:
            - JUNGLE: 3
            - SAVANNA: 2
            - DESERT: 4
          noise:
            type: OpenSimplex2 # Use Simplex, so wet cannot be directly next to dry.
            salt: 5
            frequency: 0.0325
      - mutate: # Neutral warm biomes.
          type: REPLACE
          from: "BIOME:SAVANNA"
          to:
            - FOREST: 2
            - PLAINS: 3
          noise: &biome-distribute
            type: Cellular # Use cellular to increase biome size.
            return: CellValue
            frequency: 0.25
            salt: 6
      - mutate: # Dry warm biomes
          type: REPLACE
          from: "BIOME:DESERT"
          to:
            - MESA: 6
            - ERODED_MESA: 1
            - DESERT: 18
            - SAVANNA: 12
            - ARID_MOUNTAINS: 6
          noise: *biome-distribute
      - mutate: # Wet warm biomes
          type: REPLACE
          from: "BIOME:JUNGLE"
          to:
            - JUNGLE: 4
            - MOUNTAINS_JUNGLE: 2
            - ROCKY_TALL_FOREST: 2
            - SWAMP: 2
            - SWAMP_HILLS: 1
          noise: *biome-distribute
      - mutate: # Distribution of neutral temperature biomes.
          type: REPLACE
          from: "BIOME:PLAINS"
          to:
            - FOREST: 20
            - WOODED_HILLS: 5
            - BIRCH_FOREST: 8
            - FLOWER_FOREST: 8
            - PLAINS: 24
            - SUNFLOWER_PLAINS: 5
            - SKY_ISLANDS: 1
            - DARK_FOREST: 8
            - MOUNTAINS_PRETTY: 6
            - DARK_FOREST_HILLS: 2
            - BIRCH_FOREST_HILLS: 2
          noise: *biome-distribute
      - mutate: # Distribution of cold biomes.
          type: REPLACE
          from: "BIOME:TUNDRA"
          to:
            - SNOWY_TAIGA: 5
            - TAIGA: 5
            - TAIGA_HILLS: 2
            - TUNDRA: 4
            - YELLOWSTONE: 4
            - PINE_FOREST: 8
          noise: &biome-distribute
            type: Cellular # Use cellular to increase biome size.
            return: CellValue
            frequency: 0.15
            salt: 6
      - mutate: # Distribution of cold biomes.
          type: REPLACE
          from: "BIOME:MOUNTAINS_STONE"
          to:
            - MOUNTAINS_ICE: 5
            - MOUNTAINS_STONE: 12
            - MOUNTAINS_STONE_WRAP: 4
            - MOUNTAINS_GRAVEL: 3
            - MOUNTAINS_MEADOW: 8
            - MOUNTAINS_EDGE: 1
            - MOUNTAINS_TAIGA_EDGE: 1
            - SNOWY_TAIGA: 8
            - TUNDRA: 4
          noise: &biome-distribute
            type: Cellular # Use cellular to increase biome size.
            return: CellValue
            frequency: 0.15
            salt: 6
      - expand:
          type: FRACTAL
          noise:
            type: WhiteNoise
            salt: 11
      - mutate: # Wet warm biomes
          type: REPLACE
          from: "BIOME:JUNGLE"
          to:
            - JUNGLE: 12
            - BAMBOO_JUNGLE_HILLS: 1
            - BAMBOO_JUNGLE: 2
            - JUNGLE_EDGE: 4
          noise:
            type: Cellular # Use cellular to increase biome size.
            return: CellValue
            frequency: 0.5
            salt: 6
      - mutate: # Dry warm biomes
          type: REPLACE
          from: "BIOME:DESERT"
          to:
            - DESERT: 19
            - OASIS: 1
          noise:
            type: Cellular # Use cellular to increase biome size.
            return: CellValue
            frequency: 0.4
            salt: 7
      - mutate: # Border deep ocean with normal ocean.
          type: BORDER_LIST
          from: LAND
          replace:
            WARM_OCEAN_DEEP: WARM_OCEAN
            LUKEWARM_OCEAN_DEEP: LUKEWARM_OCEAN
            COLD_OCEAN_DEEP: COLD_OCEAN
            FROZEN_OCEAN_DEEP: FROZEN_OCEAN
          default-replace: OCEAN_DEEP
          default-to: OCEAN
          noise:
            type: Constant
      - mutate: # Randomize Cold/Frozen oceans.
          type: REPLACE
          from: "BIOME:OCEAN_DEEP"
          to:
            - "OCEAN_DEEP": 7
            - "MUSHROOM": 1
          noise:
            type: Cellular
            frequency: 0.2
            return: CellValue
            salt: 21
      - expand:
          type: FRACTAL
          noise:
            type: WhiteNoise
            salt: 11
      - mutate:
          type: SMOOTH
          noise:
            type: WhiteNoise
            salt: 182
      - expand:
          type: FRACTAL
          noise:
            type: WhiteNoise
            salt: 16
      - mutate: # Mushroom beaches.
          type: BORDER
          from: OCEAN
          replace: LAND_MUSHROOM
          to:
            - MUSHROOM_BEACH: 1
          noise:
            type: Constant
      - mutate: # Generate beaches at land/ocean border.
          type: BORDER
          from: OCEAN
          replace: LAND
          to:
            - BEACH: 1
          noise:
            type: Constant
      - expand:
          type: FRACTAL
          noise:
            type: WhiteNoise
            salt: 14
      - mutate: # Regular ocean around mushroom biomes, to prevent steep drop-off.
          type: BORDER
          from: BIOME:MUSHROOM_BEACH
          replace: OCEAN_DEEP
          to:
            - OCEAN: 1
          noise:
            type: Constant
      - mutate: # Erode rivers.
          type: REPLACE_LIST
          to:
            MOUNTAINS_JUNGLE:
              - SELF: 1
              - RIVER_M_J: 1
            MOUNTAINS_STONE:
              - SELF: 1
              - RIVER_M: 1
            MOUNTAINS_PRETTY:
              - SELF: 1
              - RIVER_M_P: 1
            SKY_ISLANDS:
              - SELF: 1
              - RIVER_SKY_ISLANDS: 1
          default-from: "RIVER_ERODE"
          default-to:
            - SELF: 1
            - RIVER: 1
          noise:
            type: EXPRESSION
            equation: "if(noise(x/width, z/width) > 0,1,-1)"
            variables:
              width: 4.5
            functions:
              noise:
                type: "KERNEL"
                function:
                  type: EXPRESSION
                  equation: "if(noise(x, z) > 0, 1, 0)"
                  functions:
                    noise:
                      type: DOMAINWARP
                      function:
                        type: OPENSIMPLEX2
                        frequency: 0.03
                      warp:
                        type: OPENSIMPLEX2
                        frequency: 0.075
                      amplitude: 3
                kernel:
                  - [ -1, -1, -1 ]
                  - [ -1, 8, -1 ]
                  - [ -1, -1, -1 ]
      - mutate:
          type: SMOOTH
          noise:
            type: WhiteNoise
            salt: 18
      - mutate:
          type: SMOOTH
          noise:
            type: WhiteNoise
            salt: 19